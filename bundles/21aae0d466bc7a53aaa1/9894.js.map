{"version":3,"file":"bundles/21aae0d466bc7a53aaa1/9894.js","mappings":"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","sources":["webpack://element-web/./src/components/views/rooms/wysiwyg_composer/ComposerContext.ts","webpack://element-web/./src/components/views/rooms/wysiwyg_composer/hooks/useSelection.ts","webpack://element-web/./src/components/views/rooms/wysiwyg_composer/components/Editor.tsx","webpack://element-web/./src/components/views/rooms/wysiwyg_composer/hooks/useIsExpanded.ts","webpack://element-web/./src/components/views/rooms/wysiwyg_composer/utils/autocomplete.ts","webpack://element-web/./src/components/views/rooms/wysiwyg_composer/components/WysiwygAutocomplete.tsx","webpack://element-web/./node_modules/@vector-im/compound-design-tokens/assets/web/icons/bold.js","webpack://element-web/./node_modules/@vector-im/compound-design-tokens/assets/web/icons/list-bulleted.js","webpack://element-web/./node_modules/@vector-im/compound-design-tokens/assets/web/icons/code.js","webpack://element-web/./node_modules/@vector-im/compound-design-tokens/assets/web/icons/indent-decrease.js","webpack://element-web/./node_modules/@vector-im/compound-design-tokens/assets/web/icons/indent-increase.js","webpack://element-web/./node_modules/@vector-im/compound-design-tokens/assets/web/icons/inline-code.js","webpack://element-web/./node_modules/@vector-im/compound-design-tokens/assets/web/icons/italic.js","webpack://element-web/./node_modules/@vector-im/compound-design-tokens/assets/web/icons/list-numbered.js","webpack://element-web/./node_modules/@vector-im/compound-design-tokens/assets/web/icons/quote.js","webpack://element-web/./node_modules/@vector-im/compound-design-tokens/assets/web/icons/strikethrough.js","webpack://element-web/./node_modules/@vector-im/compound-design-tokens/assets/web/icons/underline.js","webpack://element-web/./src/components/views/rooms/wysiwyg_composer/components/LinkModal.tsx","webpack://element-web/./src/components/views/rooms/wysiwyg_composer/components/FormattingButtons.tsx","webpack://element-web/./src/components/views/rooms/wysiwyg_composer/hooks/useInputEventProcessor.ts","webpack://element-web/./src/components/views/rooms/wysiwyg_composer/utils/event.ts","webpack://element-web/./src/components/views/rooms/wysiwyg_composer/components/WysiwygComposer.tsx","webpack://element-web/./src/components/views/rooms/wysiwyg_composer/hooks/useIsFocused.ts","webpack://element-web/./src/components/views/rooms/wysiwyg_composer/hooks/useSetCursorPosition.ts","webpack://element-web/./src/components/views/rooms/wysiwyg_composer/hooks/utils.ts","webpack://element-web/./src/components/views/rooms/wysiwyg_composer/utils/editing.ts","webpack://element-web/./src/components/views/rooms/wysiwyg_composer/utils/selection.ts","webpack://element-web/./src/components/views/settings/KeyboardShortcut.tsx"],"sourcesContent":["/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { createContext, useContext } from \"react\";\nimport { IEventRelation } from \"matrix-js-sdk/src/matrix\";\n\nimport { SubSelection } from \"./types\";\nimport EditorStateTransfer from \"../../../../utils/EditorStateTransfer\";\n\nexport function getDefaultContextValue(defaultValue?: Partial<ComposerContextState>): { selection: SubSelection } {\n    return {\n        selection: { anchorNode: null, anchorOffset: 0, focusNode: null, focusOffset: 0, isForward: true },\n        ...defaultValue,\n    };\n}\n\nexport interface ComposerContextState {\n    selection: SubSelection;\n    editorStateTransfer?: EditorStateTransfer;\n    eventRelation?: IEventRelation;\n}\n\nexport const ComposerContext = createContext<ComposerContextState>(getDefaultContextValue());\nComposerContext.displayName = \"ComposerContext\";\n\nexport function useComposerContext(): ComposerContextState {\n    return useContext(ComposerContext);\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { useCallback, useEffect } from \"react\";\n\nimport useFocus from \"../../../../../hooks/useFocus\";\nimport { useComposerContext, ComposerContextState } from \"../ComposerContext\";\n\nfunction setSelectionContext(composerContext: ComposerContextState): void {\n    const selection = document.getSelection();\n\n    if (selection) {\n        const range = selection.getRangeAt(0);\n        const isForward = range.startContainer === selection.anchorNode && range.startOffset === selection.anchorOffset;\n\n        composerContext.selection = {\n            anchorNode: selection.anchorNode,\n            anchorOffset: selection.anchorOffset,\n            focusNode: selection.focusNode,\n            focusOffset: selection.focusOffset,\n            isForward,\n        };\n    }\n}\n\nexport function useSelection(): ReturnType<typeof useFocus>[1] & {\n    onInput(): void;\n} {\n    const composerContext = useComposerContext();\n    const [isFocused, focusProps] = useFocus();\n\n    useEffect(() => {\n        function onSelectionChange(): void {\n            setSelectionContext(composerContext);\n        }\n\n        if (isFocused) {\n            document.addEventListener(\"selectionchange\", onSelectionChange);\n        }\n\n        return () => document.removeEventListener(\"selectionchange\", onSelectionChange);\n    }, [isFocused, composerContext]);\n\n    const onInput = useCallback(() => {\n        setSelectionContext(composerContext);\n    }, [composerContext]);\n\n    return { ...focusProps, onInput };\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport classNames from \"classnames\";\nimport React, { CSSProperties, forwardRef, memo, MutableRefObject, ReactNode } from \"react\";\n\nimport { useIsExpanded } from \"../hooks/useIsExpanded\";\nimport { useSelection } from \"../hooks/useSelection\";\n\nconst HEIGHT_BREAKING_POINT = 24;\n\ninterface EditorProps {\n    disabled: boolean;\n    placeholder?: string;\n    leftComponent?: ReactNode;\n    rightComponent?: ReactNode;\n}\n\nexport const Editor = memo(\n    forwardRef<HTMLDivElement, EditorProps>(function Editor(\n        { disabled, placeholder, leftComponent, rightComponent }: EditorProps,\n        ref,\n    ) {\n        const isExpanded = useIsExpanded(ref as MutableRefObject<HTMLDivElement | null>, HEIGHT_BREAKING_POINT);\n        const { onFocus, onBlur, onInput } = useSelection();\n\n        return (\n            <div\n                data-testid=\"WysiwygComposerEditor\"\n                className=\"mx_WysiwygComposer_Editor\"\n                data-is-expanded={isExpanded}\n            >\n                {leftComponent}\n                <div className=\"mx_WysiwygComposer_Editor_container\">\n                    <div\n                        className={classNames(\"mx_WysiwygComposer_Editor_content\", {\n                            mx_WysiwygComposer_Editor_content_placeholder: Boolean(placeholder),\n                        })}\n                        style={{ \"--placeholder\": `\"${placeholder}\"` } as CSSProperties}\n                        ref={ref}\n                        contentEditable={!disabled}\n                        role=\"textbox\"\n                        aria-multiline=\"true\"\n                        aria-autocomplete=\"list\"\n                        aria-haspopup=\"listbox\"\n                        dir=\"auto\"\n                        aria-disabled={disabled}\n                        onFocus={onFocus}\n                        onBlur={onBlur}\n                        onInput={onInput}\n                    />\n                </div>\n                {rightComponent}\n            </div>\n        );\n    }),\n);\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { MutableRefObject, useEffect, useState } from \"react\";\n\nexport function useIsExpanded(ref: MutableRefObject<HTMLElement | null>, breakingPoint: number): boolean {\n    const [isExpanded, setIsExpanded] = useState(false);\n    useEffect(() => {\n        if (ref.current) {\n            const editor = ref.current;\n            const resizeObserver = new ResizeObserver((entries) => {\n                requestAnimationFrame(() => {\n                    const height = entries[0]?.contentBoxSize?.[0].blockSize;\n                    setIsExpanded(height >= breakingPoint);\n                });\n            });\n\n            resizeObserver.observe(editor);\n            return () => resizeObserver.unobserve(editor);\n        }\n    }, [ref, breakingPoint]);\n\n    return isExpanded;\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2023 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { AllowedMentionAttributes, MappedSuggestion } from \"@vector-im/matrix-wysiwyg\";\nimport { MatrixClient, Room } from \"matrix-js-sdk/src/matrix\";\n\nimport { ICompletion } from \"../../../../../autocomplete/Autocompleter\";\nimport * as Avatar from \"../../../../../Avatar\";\n\n/**\n * Builds the query for the `<Autocomplete />` component from the rust suggestion. This\n * will change as we implement handling / commands.\n *\n * @param suggestion  - represents if the rust model is tracking a potential mention\n * @returns an empty string if we can not generate a query, otherwise a query beginning\n * with @ for a user query, # for a room or space query\n */\nexport function buildQuery(suggestion: MappedSuggestion | null): string {\n    if (!suggestion || !suggestion.keyChar) {\n        // if we have an empty key character, we do not build a query\n        return \"\";\n    }\n\n    return `${suggestion.keyChar}${suggestion.text}`;\n}\n\n/**\n * Find the room from the completion by looking it up using the client from the context\n * we are currently in\n *\n * @param completion - the completion from the autocomplete\n * @param client - the current client we are using\n * @returns a Room if one is found, null otherwise\n */\nexport function getRoomFromCompletion(completion: ICompletion, client: MatrixClient): Room | null {\n    const roomId = completion.completionId;\n    const aliasFromCompletion = completion.completion;\n\n    let roomToReturn: Room | null | undefined;\n\n    // Not quite sure if the logic here makes sense - specifically calling .getRoom with an alias\n    // that doesn't start with #, but keeping the logic the same as in PartCreator.roomPill for now\n    if (roomId) {\n        roomToReturn = client.getRoom(roomId);\n    } else if (!aliasFromCompletion.startsWith(\"#\")) {\n        roomToReturn = client.getRoom(aliasFromCompletion);\n    } else {\n        roomToReturn = client.getRooms().find((r) => {\n            return r.getCanonicalAlias() === aliasFromCompletion || r.getAltAliases().includes(aliasFromCompletion);\n        });\n    }\n\n    return roomToReturn ?? null;\n}\n\n/**\n * Given an autocomplete suggestion, determine the text to display in the pill\n *\n * @param completion - the item selected from the autocomplete\n * @param client - the MatrixClient is required for us to look up the correct room mention text\n * @returns the text to display in the mention\n */\nexport function getMentionDisplayText(completion: ICompletion, client: MatrixClient): string {\n    if (completion.type === \"user\" || completion.type === \"at-room\") {\n        return completion.completion;\n    } else if (completion.type === \"room\") {\n        // try and get the room and use it's name, if not available, fall back to\n        // completion.completion\n        return getRoomFromCompletion(completion, client)?.name || completion.completion;\n    }\n    return \"\";\n}\n\nfunction getCSSProperties({\n    url,\n    initialLetter,\n    id = \"\",\n}: {\n    url: string;\n    initialLetter?: string;\n    id: string;\n}): string {\n    const cssProperties = [`--avatar-background: url(${url})`, `--avatar-letter: '${initialLetter}'`];\n\n    const textColor = Avatar.getAvatarTextColor(id);\n    if (textColor) {\n        cssProperties.push(textColor);\n    }\n\n    return cssProperties.join(\"; \");\n}\n\n/**\n * For a given completion, the attributes will change depending on the completion type\n *\n * @param completion - the item selected from the autocomplete\n * @param client - the MatrixClient is required for us to look up the correct room mention text\n * @param room - the room the composer is currently in\n * @returns an object of attributes containing HTMLAnchor attributes or data-* attributes\n */\nexport function getMentionAttributes(\n    completion: ICompletion,\n    client: MatrixClient,\n    room: Room,\n): AllowedMentionAttributes {\n    // To ensure that we always have something set in the --avatar-letter CSS variable\n    // as otherwise alignment varies depending on whether the content is empty or not.\n    // Use a zero width space so that it counts as content, but does not display anything.\n    const defaultLetterContent = \"\\u200b\";\n    const attributes: AllowedMentionAttributes = new Map();\n\n    if (completion.type === \"user\") {\n        // logic as used in UserPillPart.setAvatar in parts.ts\n        const mentionedMember = room.getMember(completion.completionId || \"\");\n\n        if (!mentionedMember) return attributes;\n\n        const name = mentionedMember.name || mentionedMember.userId;\n        const defaultAvatarUrl = Avatar.defaultAvatarUrlForString(mentionedMember.userId);\n        const avatarUrl = Avatar.avatarUrlForMember(mentionedMember, 16, 16, \"crop\");\n        let initialLetter = defaultLetterContent;\n        if (avatarUrl === defaultAvatarUrl) {\n            initialLetter = Avatar.getInitialLetter(name) ?? defaultLetterContent;\n        }\n\n        attributes.set(\"data-mention-type\", completion.type);\n        attributes.set(\n            \"style\",\n            getCSSProperties({\n                url: avatarUrl,\n                initialLetter,\n                id: mentionedMember.userId,\n            }),\n        );\n    } else if (completion.type === \"room\") {\n        // logic as used in RoomPillPart.setAvatar in parts.ts\n        const mentionedRoom = getRoomFromCompletion(completion, client);\n        const aliasFromCompletion = completion.completion;\n\n        let initialLetter = defaultLetterContent;\n        let avatarUrl = Avatar.avatarUrlForRoom(mentionedRoom ?? null, 16, 16, \"crop\");\n        if (!avatarUrl) {\n            initialLetter = Avatar.getInitialLetter(mentionedRoom?.name || aliasFromCompletion) ?? defaultLetterContent;\n            avatarUrl = Avatar.defaultAvatarUrlForString(mentionedRoom?.roomId ?? aliasFromCompletion);\n        }\n\n        attributes.set(\"data-mention-type\", completion.type);\n        attributes.set(\n            \"style\",\n            getCSSProperties({\n                url: avatarUrl,\n                initialLetter,\n                id: mentionedRoom?.roomId ?? aliasFromCompletion,\n            }),\n        );\n    } else if (completion.type === \"at-room\") {\n        // logic as used in RoomPillPart.setAvatar in parts.ts, but now we know the current room\n        // from the arguments passed\n        let initialLetter = defaultLetterContent;\n        let avatarUrl = Avatar.avatarUrlForRoom(room, 16, 16, \"crop\");\n\n        if (!avatarUrl) {\n            initialLetter = Avatar.getInitialLetter(room.name) ?? defaultLetterContent;\n            avatarUrl = Avatar.defaultAvatarUrlForString(room.roomId);\n        }\n\n        attributes.set(\"data-mention-type\", completion.type);\n        attributes.set(\n            \"style\",\n            getCSSProperties({\n                url: avatarUrl,\n                initialLetter,\n                id: room.roomId,\n            }),\n        );\n    }\n\n    return attributes;\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2023 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React, { ForwardedRef, forwardRef, FunctionComponent } from \"react\";\nimport { FormattingFunctions, MappedSuggestion } from \"@vector-im/matrix-wysiwyg\";\nimport { logger } from \"matrix-js-sdk/src/logger\";\n\nimport { useRoomContext } from \"../../../../../contexts/RoomContext\";\nimport Autocomplete from \"../../Autocomplete\";\nimport { ICompletion } from \"../../../../../autocomplete/Autocompleter\";\nimport { useMatrixClientContext } from \"../../../../../contexts/MatrixClientContext\";\nimport { getMentionDisplayText, getMentionAttributes, buildQuery } from \"../utils/autocomplete\";\n\ninterface WysiwygAutocompleteProps {\n    /**\n     * The suggestion output from the rust model is used to build the query that is\n     * passed to the `<Autocomplete />` component\n     */\n    suggestion: MappedSuggestion | null;\n\n    /**\n     * This handler will be called with the href and display text for a mention on clicking\n     * a mention in the autocomplete list or pressing enter on a selected item\n     */\n    handleMention: FormattingFunctions[\"mention\"];\n\n    /**\n     * This handler will be called with the display text for a command on clicking\n     * a command in the autocomplete list or pressing enter on a selected item\n     */\n    handleCommand: FormattingFunctions[\"command\"];\n\n    /**\n     * Handler purely for the at-room mentions special case\n     */\n    handleAtRoomMention: FormattingFunctions[\"mentionAtRoom\"];\n}\n\n/**\n * Given the current suggestion from the rust model and a handler function, this component\n * will display the legacy `<Autocomplete />` component (as used in the BasicMessageComposer)\n * and call the handler function with the required arguments when a mention is selected\n *\n * @param props.ref - the ref will be attached to the rendered `<Autocomplete />` component\n */\nconst WysiwygAutocomplete = forwardRef(\n    (\n        { suggestion, handleMention, handleCommand, handleAtRoomMention }: WysiwygAutocompleteProps,\n        ref: ForwardedRef<Autocomplete>,\n    ): JSX.Element | null => {\n        const { room } = useRoomContext();\n        const client = useMatrixClientContext();\n\n        function handleConfirm(completion: ICompletion): void {\n            if (client === undefined || room === undefined) {\n                return;\n            }\n\n            switch (completion.type) {\n                case \"command\": {\n                    // TODO determine if utils in SlashCommands.tsx are required.\n                    // Trim the completion as some include trailing spaces, but we always insert a\n                    // trailing space in the rust model anyway\n                    handleCommand(completion.completion.trim());\n                    return;\n                }\n                case \"at-room\": {\n                    handleAtRoomMention(getMentionAttributes(completion, client, room));\n                    return;\n                }\n                case \"room\":\n                case \"user\": {\n                    if (typeof completion.href === \"string\") {\n                        handleMention(\n                            completion.href,\n                            getMentionDisplayText(completion, client),\n                            getMentionAttributes(completion, client, room),\n                        );\n                    }\n                    return;\n                }\n                // TODO - handle \"community\" type\n                default:\n                    return;\n            }\n        }\n\n        if (!room) return null;\n\n        const autoCompleteQuery = buildQuery(suggestion);\n        // debug for https://github.com/vector-im/element-web/issues/26037\n        logger.log(`## 26037 ## Rendering Autocomplete for WysiwygAutocomplete with query: \"${autoCompleteQuery}\"`);\n\n        // TODO - determine if we show all of the /command suggestions, there are some options in the\n        // list which don't seem to make sense in this context, specifically /html and /plain\n        return (\n            <div className=\"mx_WysiwygComposer_AutoCompleteWrapper\" data-testid=\"autocomplete-wrapper\">\n                <Autocomplete\n                    ref={ref}\n                    query={autoCompleteQuery}\n                    onConfirm={handleConfirm}\n                    selection={{ start: 0, end: 0 }}\n                    room={room}\n                />\n            </div>\n        );\n    },\n);\n\n(WysiwygAutocomplete as FunctionComponent).displayName = \"WysiwygAutocomplete\";\n\nexport { WysiwygAutocomplete };\n","import { forwardRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction BoldIcon(props, ref) {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M8.8 19c-.55 0-1.02-.196-1.413-.587A1.926 1.926 0 0 1 6.8 17V7c0-.55.196-1.02.588-1.412A1.926 1.926 0 0 1 8.8 5h3.525c1.083 0 2.083.333 3 1 .917.667 1.375 1.592 1.375 2.775 0 .85-.192 1.504-.575 1.963-.383.458-.742.787-1.075.987.417.183.88.525 1.387 1.025.509.5.763 1.25.763 2.25 0 1.483-.542 2.52-1.625 3.113-1.083.591-2.1.887-3.05.887H8.8Zm1.025-2.8h2.6c.8 0 1.287-.204 1.462-.612.175-.409.263-.705.263-.888 0-.183-.088-.48-.263-.887-.175-.409-.687-.613-1.537-.613H9.825v3Zm0-5.7h2.325c.55 0 .95-.142 1.2-.425a1.4 1.4 0 0 0 .375-.95c0-.4-.142-.725-.425-.975-.283-.25-.65-.375-1.1-.375H9.825V10.5Z\"\n    })\n  });\n}\n;\nBoldIcon.displayName = \"BoldIcon\";\nexport default forwardRef(BoldIcon);","import { forwardRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction ListBulletedIcon(props, ref) {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M4.5 7.5a1.45 1.45 0 0 1-1.06-.44A1.444 1.444 0 0 1 3 6c0-.412.147-.766.44-1.06A1.45 1.45 0 0 1 4.5 4.5c.412 0 .766.147 1.06.44.293.294.44.647.44 1.06 0 .412-.147.766-.44 1.06-.294.293-.647.44-1.06.44Zm4.787 11.212c.192.192.43.288.713.288h10c.283 0 .52-.096.712-.288A.968.968 0 0 0 21 18a.968.968 0 0 0-.288-.712A.968.968 0 0 0 20 17H10a.967.967 0 0 0-.713.288A.968.968 0 0 0 9 18c0 .283.096.52.287.712Zm0-5.999c.192.191.43.287.713.287h10a.97.97 0 0 0 .712-.287A.968.968 0 0 0 21 12a.968.968 0 0 0-.288-.713A.968.968 0 0 0 20 11H10a.967.967 0 0 0-.713.287A.968.968 0 0 0 9 12c0 .283.096.52.287.713Zm0-6c.192.191.43.287.713.287h10a.97.97 0 0 0 .712-.287A.967.967 0 0 0 21 6a.967.967 0 0 0-.288-.713A.968.968 0 0 0 20 5H10a.968.968 0 0 0-.713.287A.968.968 0 0 0 9 6c0 .283.096.52.287.713ZM3.44 19.06c.294.293.648.44 1.06.44a1.45 1.45 0 0 0 1.06-.44c.293-.294.44-.647.44-1.06 0-.413-.147-.766-.44-1.06a1.445 1.445 0 0 0-1.06-.44 1.45 1.45 0 0 0-1.06.44c-.293.294-.44.647-.44 1.06 0 .413.147.766.44 1.06ZM4.5 13.5a1.45 1.45 0 0 1-1.06-.44A1.445 1.445 0 0 1 3 12c0-.412.147-.766.44-1.06a1.45 1.45 0 0 1 1.06-.44c.412 0 .766.147 1.06.44.293.294.44.648.44 1.06 0 .412-.147.766-.44 1.06-.294.293-.647.44-1.06.44Z\"\n    })\n  });\n}\n;\nListBulletedIcon.displayName = \"ListBulletedIcon\";\nexport default forwardRef(ListBulletedIcon);","import { forwardRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction CodeIcon(props, ref) {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"m8.825 12 1.475-1.475c.2-.2.3-.433.3-.7 0-.267-.1-.5-.3-.7-.2-.2-.438-.3-.713-.3-.274 0-.512.1-.712.3L6.7 11.3c-.1.1-.17.208-.213.325a1.107 1.107 0 0 0-.062.375c0 .133.02.258.063.375a.877.877 0 0 0 .212.325l2.175 2.175c.2.2.438.3.713.3.275 0 .512-.1.712-.3.2-.2.3-.433.3-.7 0-.267-.1-.5-.3-.7L8.825 12Zm6.35 0L13.7 13.475c-.2.2-.3.433-.3.7 0 .267.1.5.3.7.2.2.438.3.713.3.274 0 .512-.1.712-.3L17.3 12.7c.1-.1.17-.208.212-.325.042-.117.063-.242.063-.375s-.02-.258-.063-.375a.877.877 0 0 0-.212-.325l-2.175-2.175a.999.999 0 0 0-1.425 0c-.2.2-.3.433-.3.7 0 .267.1.5.3.7L15.175 12ZM5 21c-.55 0-1.02-.196-1.413-.587A1.926 1.926 0 0 1 3 19V5c0-.55.196-1.02.587-1.413A1.926 1.926 0 0 1 5 3h14c.55 0 1.02.196 1.413.587.39.393.587.863.587 1.413v14c0 .55-.196 1.02-.587 1.413A1.926 1.926 0 0 1 19 21H5Zm0-2h14V5H5v14Z\"\n    })\n  });\n}\n;\nCodeIcon.displayName = \"CodeIcon\";\nexport default forwardRef(CodeIcon);","import { forwardRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction IndentDecreaseIcon(props, ref) {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M3.288 18.712A.965.965 0 0 0 4 19h16c.283 0 .52-.096.712-.288A.968.968 0 0 0 21 18a.968.968 0 0 0-.288-.712A.968.968 0 0 0 20 17H4a.967.967 0 0 0-.712.288A.968.968 0 0 0 3 18c0 .283.096.52.288.712Zm7.999-3.999c.192.191.43.287.713.287h8a.97.97 0 0 0 .712-.287A.968.968 0 0 0 21 14a.968.968 0 0 0-.288-.713A.968.968 0 0 0 20 13h-8a.968.968 0 0 0-.713.287A.968.968 0 0 0 11 14c0 .283.096.52.287.713Zm0-4c.192.191.43.287.713.287h8a.97.97 0 0 0 .712-.287A.968.968 0 0 0 21 10a.967.967 0 0 0-.288-.713A.968.968 0 0 0 20 9h-8a.968.968 0 0 0-.713.287A.967.967 0 0 0 11 10c0 .283.096.52.287.713Zm0-4c.192.191.43.287.713.287h8a.97.97 0 0 0 .712-.287A.967.967 0 0 0 21 6a.967.967 0 0 0-.288-.713A.968.968 0 0 0 20 5h-8a.968.968 0 0 0-.713.287A.967.967 0 0 0 11 6c0 .283.096.52.287.713ZM6.15 13.15l-2.8-2.8a.48.48 0 0 1 0-.7l2.8-2.8c.167-.167.35-.208.55-.125.2.083.3.242.3.475v5.6c0 .233-.1.392-.3.475-.2.083-.383.042-.55-.125Z\"\n    })\n  });\n}\n;\nIndentDecreaseIcon.displayName = \"IndentDecreaseIcon\";\nexport default forwardRef(IndentDecreaseIcon);","import { forwardRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction IndentIncreaseIcon(props, ref) {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M4 19a.967.967 0 0 1-.712-.288A.968.968 0 0 1 3 18c0-.283.096-.52.288-.712A.967.967 0 0 1 4 17h16c.283 0 .52.096.712.288.192.191.288.429.288.712s-.096.52-.288.712A.968.968 0 0 1 20 19H4Zm8-4a.968.968 0 0 1-.713-.287A.968.968 0 0 1 11 14c0-.283.096-.52.287-.713A.968.968 0 0 1 12 13h8a.97.97 0 0 1 .712.287c.192.192.288.43.288.713s-.096.52-.288.713A.968.968 0 0 1 20 15h-8Zm0-4a.968.968 0 0 1-.713-.287A.968.968 0 0 1 11 10c0-.283.096-.52.287-.713A.968.968 0 0 1 12 9h8a.97.97 0 0 1 .712.287c.192.192.288.43.288.713s-.096.52-.288.713A.968.968 0 0 1 20 11h-8Zm0-4a.968.968 0 0 1-.713-.287A.967.967 0 0 1 11 6c0-.283.096-.52.287-.713A.968.968 0 0 1 12 5h8a.97.97 0 0 1 .712.287c.192.192.288.43.288.713s-.096.52-.288.713A.968.968 0 0 1 20 7h-8Zm-8.15 6.15c-.167.167-.35.208-.55.125-.2-.083-.3-.242-.3-.475V7.2c0-.233.1-.392.3-.475.2-.083.383-.042.55.125l2.8 2.8a.48.48 0 0 1 0 .7l-2.8 2.8Z\"\n    })\n  });\n}\n;\nIndentIncreaseIcon.displayName = \"IndentIncreaseIcon\";\nexport default forwardRef(IndentIncreaseIcon);","import { forwardRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction InlineCodeIcon(props, ref) {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M14.958 5.62a1 1 0 0 0-1.916-.574l-4 13.333a1 1 0 0 0 1.916.575l4-13.333ZM5.974 7.232a1 1 0 0 0-1.409.128l-3.333 4a1 1 0 0 0 0 1.28l3.333 4a1 1 0 1 0 1.537-1.28L3.302 12l2.8-3.36a1 1 0 0 0-.128-1.408Zm12.052 0a1 1 0 0 1 1.409.128l3.333 4a1 1 0 0 1 0 1.28l-3.333 4a1 1 0 1 1-1.537-1.28l2.8-3.36-2.8-3.36a1 1 0 0 1 .128-1.408Z\"\n    })\n  });\n}\n;\nInlineCodeIcon.displayName = \"InlineCodeIcon\";\nexport default forwardRef(InlineCodeIcon);","import { forwardRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction ItalicIcon(props, ref) {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M6.25 19c-.35 0-.646-.12-.888-.363A1.207 1.207 0 0 1 5 17.75c0-.35.12-.646.362-.887.242-.242.538-.363.888-.363H9l3-9H9.25c-.35 0-.646-.12-.887-.362A1.207 1.207 0 0 1 8 6.25c0-.35.12-.646.363-.888A1.21 1.21 0 0 1 9.25 5h7.5c.35 0 .646.12.887.362.242.242.363.538.363.888s-.12.646-.363.888a1.207 1.207 0 0 1-.887.362H14.5l-3 9h2.25c.35 0 .646.12.887.363.242.241.363.537.363.887s-.12.646-.363.887a1.207 1.207 0 0 1-.887.363h-7.5Z\"\n    })\n  });\n}\n;\nItalicIcon.displayName = \"ItalicIcon\";\nexport default forwardRef(ItalicIcon);","import { forwardRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction ListNumberedIcon(props, ref) {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M9 6a1 1 0 0 1 1-1h10a1 1 0 1 1 0 2H10a1 1 0 0 1-1-1Zm0 6a1 1 0 0 1 1-1h10a1 1 0 1 1 0 2H10a1 1 0 0 1-1-1Zm0 6a1 1 0 0 1 1-1h10a1 1 0 1 1 0 2H10a1 1 0 0 1-1-1ZM5.604 5.089A.75.75 0 0 1 6 5.75v4.5a.75.75 0 0 1-1.5 0V7.151l-.334.223a.75.75 0 0 1-.832-1.248l1.5-1a.75.75 0 0 1 .77-.037ZM5 13a2.02 2.02 0 0 0-1.139.321 1.846 1.846 0 0 0-.626.719 2.286 2.286 0 0 0-.234.921v.023l-.001.01v.005l.75.001H3a.75.75 0 0 0 1.5.01V15a.789.789 0 0 1 .077-.29.35.35 0 0 1 .116-.14c.04-.027.126-.07.307-.07s.267.043.307.07a.35.35 0 0 1 .116.14.788.788 0 0 1 .076.29v.008a.532.532 0 0 1-.14.352l-2.161 2.351a.748.748 0 0 0-.198.523v.016c0 .414.336.75.75.75h2.5a.75.75 0 0 0 0-1.5h-.82l1.034-1.124C6.809 16 7 15.51 7 15h-.75H7v-.039l-.004-.068a2.285 2.285 0 0 0-.231-.853 1.846 1.846 0 0 0-.626-.719A2.02 2.02 0 0 0 5 13Zm-.5 2.003V15v.01-.008Z\"\n    })\n  });\n}\n;\nListNumberedIcon.displayName = \"ListNumberedIcon\";\nexport default forwardRef(ListNumberedIcon);","import { forwardRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction QuoteIcon(props, ref) {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M4.719 4.34c.094-.642-.366-1.236-1.028-1.328-.663-.092-1.276.354-1.371.996l-.808 5.478c-.094.642.366 1.237 1.028 1.328.663.092 1.276-.354 1.371-.996l.808-5.478Zm12.115 10.174c.095-.642-.366-1.237-1.028-1.328-.662-.092-1.276.354-1.37.996l-.809 5.478c-.094.642.366 1.236 1.028 1.328.663.092 1.277-.354 1.371-.996l.808-5.478ZM9.318 3.009c.665.077 1.138.662 1.058 1.306l-.022.175a220.467 220.467 0 0 1-.266 2.006c-.161 1.171-.368 2.579-.535 3.386-.13.636-.769 1.049-1.425.921-.656-.127-1.082-.745-.95-1.381.148-.72.345-2.052.509-3.237a190.652 190.652 0 0 0 .262-1.981l.021-.17c.08-.644.684-1.103 1.348-1.025Zm13.17 11.505c.094-.642-.366-1.237-1.028-1.328-.663-.092-1.276.354-1.371.996l-.808 5.478c-.094.642.366 1.236 1.028 1.328.663.092 1.276-.354 1.371-.996l.808-5.478Z\"\n    })\n  });\n}\n;\nQuoteIcon.displayName = \"QuoteIcon\";\nexport default forwardRef(QuoteIcon);","import { forwardRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction StrikethroughIcon(props, ref) {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M12.15 20c-1.267 0-2.392-.375-3.375-1.125-.983-.75-1.692-1.775-2.125-3.075l2.2-.95c.233.8.638 1.458 1.213 1.975.574.517 1.287.775 2.137.775.7 0 1.333-.167 1.9-.5.567-.333.85-.867.85-1.6 0-.3-.058-.575-.175-.825A2.362 2.362 0 0 0 14.3 14h2.8a4.279 4.279 0 0 1 .25 1.5c0 1.433-.513 2.542-1.538 3.325C14.788 19.608 13.567 20 12.15 20ZM3 12a.967.967 0 0 1-.712-.287A.968.968 0 0 1 2 11c0-.283.096-.52.288-.712A.967.967 0 0 1 3 10h18c.283 0 .52.096.712.288.192.191.288.429.288.712s-.096.52-.288.713A.968.968 0 0 1 21 12H3Zm9.05-8.15c1.1 0 2.063.27 2.887.813.825.541 1.463 1.37 1.913 2.487l-2.2.975a2.987 2.987 0 0 0-.838-1.3c-.408-.383-.979-.575-1.712-.575-.683 0-1.25.154-1.7.463-.45.308-.7.737-.75 1.287h-2.4c.033-1.15.487-2.13 1.363-2.937.875-.809 2.02-1.213 3.437-1.213Z\"\n    })\n  });\n}\n;\nStrikethroughIcon.displayName = \"StrikethroughIcon\";\nexport default forwardRef(StrikethroughIcon);","import { forwardRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction UnderlineIcon(props, ref) {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M6 21a.967.967 0 0 1-.713-.288A.968.968 0 0 1 5 20a.97.97 0 0 1 .287-.712A.967.967 0 0 1 6 19h12c.283 0 .52.096.712.288.192.191.288.429.288.712s-.096.52-.288.712A.968.968 0 0 1 18 21H6Zm6-4c-1.683 0-2.992-.525-3.925-1.575-.933-1.05-1.4-2.442-1.4-4.175V4.275c0-.35.13-.65.388-.9A1.27 1.27 0 0 1 7.974 3c.35 0 .65.125.9.375s.375.55.375.9V11.4c0 .933.233 1.692.7 2.275.467.583 1.15.875 2.05.875.9 0 1.583-.292 2.05-.875.467-.583.7-1.342.7-2.275V4.275c0-.35.13-.65.387-.9A1.27 1.27 0 0 1 16.05 3c.35 0 .65.125.9.375s.375.55.375.9v6.975c0 1.733-.467 3.125-1.4 4.175C14.992 16.475 13.683 17 12 17Z\"\n    })\n  });\n}\n;\nUnderlineIcon.displayName = \"UnderlineIcon\";\nexport default forwardRef(UnderlineIcon);","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { FormattingFunctions } from \"@vector-im/matrix-wysiwyg\";\nimport React, { ChangeEvent, useState } from \"react\";\n\nimport { _t } from \"../../../../../languageHandler\";\nimport Modal from \"../../../../../Modal\";\nimport Field from \"../../../elements/Field\";\nimport { ComposerContextState } from \"../ComposerContext\";\nimport { isSelectionEmpty, setSelection } from \"../utils/selection\";\nimport BaseDialog from \"../../../dialogs/BaseDialog\";\nimport DialogButtons from \"../../../elements/DialogButtons\";\n\nexport function openLinkModal(\n    composer: FormattingFunctions,\n    composerContext: ComposerContextState,\n    isEditing: boolean,\n): void {\n    Modal.createDialog(\n        LinkModal,\n        {\n            composerContext,\n            composer,\n            isTextEnabled: isSelectionEmpty(),\n            isEditing,\n        },\n        \"mx_CompoundDialog\",\n        false,\n        true,\n    );\n}\n\nfunction isEmpty(text: string): boolean {\n    return text.length < 1;\n}\n\ninterface LinkModalProps {\n    composer: FormattingFunctions;\n    isTextEnabled: boolean;\n    onFinished: () => void;\n    composerContext: ComposerContextState;\n    isEditing: boolean;\n}\n\nexport const LinkModal: React.FC<LinkModalProps> = ({\n    composer,\n    isTextEnabled,\n    onFinished,\n    composerContext,\n    isEditing,\n}) => {\n    const [hasLinkChanged, setHasLinkChanged] = useState(false);\n    const [fields, setFields] = useState({ text: \"\", link: isEditing ? composer.getLink() : \"\" });\n    const hasText = !isEditing && isTextEnabled;\n    const isSaveDisabled = !hasLinkChanged || (hasText && isEmpty(fields.text)) || isEmpty(fields.link);\n\n    return (\n        <BaseDialog\n            className=\"mx_LinkModal\"\n            title={isEditing ? _t(\"composer|link_modal|title_edit\") : _t(\"composer|link_modal|title_create\")}\n            hasCancel={true}\n            onFinished={onFinished}\n        >\n            <form\n                className=\"mx_LinkModal_content\"\n                onSubmit={async (evt) => {\n                    evt.preventDefault();\n                    evt.stopPropagation();\n\n                    onFinished();\n\n                    // When submitting is done when pressing enter when the link field has the focus,\n                    // The link field is getting back the focus (due to react-focus-lock)\n                    // So we are waiting that the focus stuff is done to play with the composer selection\n                    await new Promise((resolve) => setTimeout(resolve, 0));\n\n                    await setSelection(composerContext.selection);\n                    composer.link(fields.link, isTextEnabled ? fields.text : undefined);\n                }}\n            >\n                {hasText && (\n                    <Field\n                        required={true}\n                        autoFocus={true}\n                        label={_t(\"composer|link_modal|text_field_label\")}\n                        value={fields.text}\n                        className=\"mx_LinkModal_Field\"\n                        placeholder=\"\"\n                        onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                            setFields((fields) => ({ ...fields, text: e.target.value }))\n                        }\n                    />\n                )}\n                <Field\n                    required={true}\n                    autoFocus={!hasText}\n                    label={_t(\"composer|link_modal|link_field_label\")}\n                    value={fields.link}\n                    className=\"mx_LinkModal_Field\"\n                    placeholder=\"\"\n                    onChange={(e: ChangeEvent<HTMLInputElement>) => {\n                        setFields((fields) => ({ ...fields, link: e.target.value }));\n                        setHasLinkChanged(true);\n                    }}\n                />\n\n                <div className=\"mx_LinkModal_buttons\">\n                    {isEditing && (\n                        <button\n                            type=\"button\"\n                            className=\"danger\"\n                            onClick={() => {\n                                composer.removeLinks();\n                                onFinished();\n                            }}\n                        >\n                            {_t(\"action|remove\")}\n                        </button>\n                    )}\n                    <DialogButtons\n                        primaryButton={_t(\"action|save\")}\n                        primaryDisabled={isSaveDisabled}\n                        primaryIsSubmit={true}\n                        onCancel={onFinished}\n                    />\n                </div>\n            </form>\n        </BaseDialog>\n    );\n};\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React, { MouseEventHandler, ReactNode } from \"react\";\nimport { FormattingFunctions, AllActionStates, ActionState } from \"@vector-im/matrix-wysiwyg\";\nimport classNames from \"classnames\";\nimport BoldIcon from \"@vector-im/compound-design-tokens/assets/web/icons/bold\";\nimport BulletedListIcon from \"@vector-im/compound-design-tokens/assets/web/icons/list-bulleted\";\nimport CodeBlockIcon from \"@vector-im/compound-design-tokens/assets/web/icons/code\";\nimport UnIndentIcon from \"@vector-im/compound-design-tokens/assets/web/icons/indent-decrease\";\nimport IndentIcon from \"@vector-im/compound-design-tokens/assets/web/icons/indent-increase\";\nimport InlineCodeIcon from \"@vector-im/compound-design-tokens/assets/web/icons/inline-code\";\nimport ItalicIcon from \"@vector-im/compound-design-tokens/assets/web/icons/italic\";\nimport NumberedListIcon from \"@vector-im/compound-design-tokens/assets/web/icons/list-numbered\";\nimport QuoteIcon from \"@vector-im/compound-design-tokens/assets/web/icons/quote\";\nimport StrikeThroughIcon from \"@vector-im/compound-design-tokens/assets/web/icons/strikethrough\";\nimport UnderlineIcon from \"@vector-im/compound-design-tokens/assets/web/icons/underline\";\nimport LinkIcon from \"@vector-im/compound-design-tokens/assets/web/icons/link\";\n\nimport { _t } from \"../../../../../languageHandler\";\nimport AccessibleButton, { ButtonEvent } from \"../../../elements/AccessibleButton\";\nimport { openLinkModal } from \"./LinkModal\";\nimport { useComposerContext } from \"../ComposerContext\";\nimport { KeyboardShortcut } from \"../../../settings/KeyboardShortcut\";\nimport { KeyCombo } from \"../../../../../KeyBindingsManager\";\n\ninterface ButtonProps {\n    icon: ReactNode;\n    actionState: ActionState;\n    onClick: MouseEventHandler<HTMLButtonElement>;\n    label: string;\n    keyCombo?: KeyCombo;\n}\n\nfunction Button({ label, keyCombo, onClick, actionState, icon }: ButtonProps): JSX.Element {\n    return (\n        <AccessibleButton\n            element=\"button\"\n            onClick={onClick as (e: ButtonEvent) => void}\n            aria-label={label}\n            className={classNames(\"mx_FormattingButtons_Button\", {\n                mx_FormattingButtons_active: actionState === \"reversed\",\n                mx_FormattingButtons_Button_hover: actionState === \"enabled\",\n                mx_FormattingButtons_disabled: actionState === \"disabled\",\n            })}\n            title={actionState === \"disabled\" ? undefined : label}\n            caption={\n                keyCombo && (\n                    <KeyboardShortcut value={keyCombo} className=\"mx_FormattingButtons_Tooltip_KeyboardShortcut\" />\n                )\n            }\n            placement=\"top\"\n        >\n            {icon}\n        </AccessibleButton>\n    );\n}\n\ninterface FormattingButtonsProps {\n    composer: FormattingFunctions;\n    actionStates: AllActionStates;\n}\n\nexport function FormattingButtons({ composer, actionStates }: FormattingButtonsProps): JSX.Element {\n    const composerContext = useComposerContext();\n    const isInList = actionStates.unorderedList === \"reversed\" || actionStates.orderedList === \"reversed\";\n    return (\n        <div className=\"mx_FormattingButtons\">\n            <Button\n                actionState={actionStates.bold}\n                label={_t(\"composer|format_bold\")}\n                keyCombo={{ ctrlOrCmdKey: true, key: \"b\" }}\n                onClick={() => composer.bold()}\n                icon={<BoldIcon className=\"mx_FormattingButtons_Icon\" />}\n            />\n            <Button\n                actionState={actionStates.italic}\n                label={_t(\"composer|format_italic\")}\n                keyCombo={{ ctrlOrCmdKey: true, key: \"i\" }}\n                onClick={() => composer.italic()}\n                icon={<ItalicIcon className=\"mx_FormattingButtons_Icon\" />}\n            />\n            <Button\n                actionState={actionStates.underline}\n                label={_t(\"composer|format_underline\")}\n                keyCombo={{ ctrlOrCmdKey: true, key: \"u\" }}\n                onClick={() => composer.underline()}\n                icon={<UnderlineIcon className=\"mx_FormattingButtons_Icon\" />}\n            />\n            <Button\n                actionState={actionStates.strikeThrough}\n                label={_t(\"composer|format_strikethrough\")}\n                onClick={() => composer.strikeThrough()}\n                icon={<StrikeThroughIcon className=\"mx_FormattingButtons_Icon\" />}\n            />\n            <Button\n                actionState={actionStates.unorderedList}\n                label={_t(\"composer|format_unordered_list\")}\n                onClick={() => composer.unorderedList()}\n                icon={<BulletedListIcon className=\"mx_FormattingButtons_Icon\" />}\n            />\n            <Button\n                actionState={actionStates.orderedList}\n                label={_t(\"composer|format_ordered_list\")}\n                onClick={() => composer.orderedList()}\n                icon={<NumberedListIcon className=\"mx_FormattingButtons_Icon\" />}\n            />\n            {isInList && (\n                <Button\n                    actionState={actionStates.indent}\n                    label={_t(\"composer|format_increase_indent\")}\n                    onClick={() => composer.indent()}\n                    icon={<IndentIcon className=\"mx_FormattingButtons_Icon\" />}\n                />\n            )}\n            {isInList && (\n                <Button\n                    actionState={actionStates.unindent}\n                    label={_t(\"composer|format_decrease_indent\")}\n                    onClick={() => composer.unindent()}\n                    icon={<UnIndentIcon className=\"mx_FormattingButtons_Icon\" />}\n                />\n            )}\n            <Button\n                actionState={actionStates.quote}\n                label={_t(\"action|quote\")}\n                onClick={() => composer.quote()}\n                icon={<QuoteIcon className=\"mx_FormattingButtons_Icon\" />}\n            />\n            <Button\n                actionState={actionStates.inlineCode}\n                label={_t(\"composer|format_inline_code\")}\n                keyCombo={{ ctrlOrCmdKey: true, key: \"e\" }}\n                onClick={() => composer.inlineCode()}\n                icon={<InlineCodeIcon className=\"mx_FormattingButtons_Icon\" />}\n            />\n            <Button\n                actionState={actionStates.codeBlock}\n                label={_t(\"composer|format_code_block\")}\n                onClick={() => composer.codeBlock()}\n                icon={<CodeBlockIcon className=\"mx_FormattingButtons_Icon\" />}\n            />\n            <Button\n                actionState={actionStates.link}\n                label={_t(\"composer|format_link\")}\n                onClick={() => openLinkModal(composer, composerContext, actionStates.link === \"reversed\")}\n                icon={<LinkIcon className=\"mx_FormattingButtons_Icon\" />}\n            />\n        </div>\n    );\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { Wysiwyg, WysiwygEvent } from \"@vector-im/matrix-wysiwyg\";\nimport { useCallback } from \"react\";\nimport { IEventRelation, MatrixClient } from \"matrix-js-sdk/src/matrix\";\n\nimport { useSettingValue } from \"../../../../../hooks/useSettings\";\nimport { getKeyBindingsManager } from \"../../../../../KeyBindingsManager\";\nimport { KeyBindingAction } from \"../../../../../accessibility/KeyboardShortcuts\";\nimport { findEditableEvent } from \"../../../../../utils/EventUtils\";\nimport dis from \"../../../../../dispatcher/dispatcher\";\nimport { Action } from \"../../../../../dispatcher/actions\";\nimport { useRoomContext } from \"../../../../../contexts/RoomContext\";\nimport { IRoomState } from \"../../../../structures/RoomView\";\nimport { ComposerContextState, useComposerContext } from \"../ComposerContext\";\nimport EditorStateTransfer from \"../../../../../utils/EditorStateTransfer\";\nimport { useMatrixClientContext } from \"../../../../../contexts/MatrixClientContext\";\nimport { isCaretAtEnd, isCaretAtStart } from \"../utils/selection\";\nimport { getEventsFromEditorStateTransfer, getEventsFromRoom } from \"../utils/event\";\nimport { endEditing } from \"../utils/editing\";\nimport Autocomplete from \"../../Autocomplete\";\nimport { handleClipboardEvent, handleEventWithAutocomplete, isEventToHandleAsClipboardEvent } from \"./utils\";\n\nexport function useInputEventProcessor(\n    onSend: () => void,\n    autocompleteRef: React.RefObject<Autocomplete>,\n    initialContent?: string,\n    eventRelation?: IEventRelation,\n): (event: WysiwygEvent, composer: Wysiwyg, editor: HTMLElement) => WysiwygEvent | null {\n    const roomContext = useRoomContext();\n    const composerContext = useComposerContext();\n    const mxClient = useMatrixClientContext();\n    const isCtrlEnterToSend = useSettingValue<boolean>(\"MessageComposerInput.ctrlEnterToSend\");\n\n    return useCallback(\n        (event: WysiwygEvent, composer: Wysiwyg, editor: HTMLElement) => {\n            const send = (): void => {\n                event.stopPropagation?.();\n                event.preventDefault?.();\n                // do not send the message if we have the autocomplete open, regardless of settings\n                if (autocompleteRef?.current && !autocompleteRef.current.state.hide) {\n                    return;\n                }\n                onSend();\n            };\n\n            if (isEventToHandleAsClipboardEvent(event)) {\n                const data = event instanceof ClipboardEvent ? event.clipboardData : event.dataTransfer;\n                const handled = handleClipboardEvent(event, data, roomContext, mxClient, eventRelation);\n                return handled ? null : event;\n            }\n\n            const isKeyboardEvent = event instanceof KeyboardEvent;\n            if (isKeyboardEvent) {\n                return handleKeyboardEvent(\n                    event,\n                    send,\n                    initialContent,\n                    composer,\n                    editor,\n                    roomContext,\n                    composerContext,\n                    mxClient,\n                    autocompleteRef,\n                );\n            } else {\n                return handleInputEvent(event, send, isCtrlEnterToSend);\n            }\n        },\n        [\n            isCtrlEnterToSend,\n            onSend,\n            initialContent,\n            roomContext,\n            composerContext,\n            mxClient,\n            autocompleteRef,\n            eventRelation,\n        ],\n    );\n}\n\ntype Send = () => void;\n\nfunction handleKeyboardEvent(\n    event: KeyboardEvent,\n    send: Send,\n    initialContent: string | undefined,\n    composer: Wysiwyg,\n    editor: HTMLElement,\n    roomContext: IRoomState,\n    composerContext: ComposerContextState,\n    mxClient: MatrixClient | undefined,\n    autocompleteRef: React.RefObject<Autocomplete>,\n): KeyboardEvent | null {\n    const { editorStateTransfer } = composerContext;\n    const isEditing = Boolean(editorStateTransfer);\n    const isEditorModified = isEditing ? initialContent !== composer.content() : composer.content().length !== 0;\n    const action = getKeyBindingsManager().getMessageComposerAction(event);\n\n    // we need autocomplete to take priority when it is open for using enter to select\n    const isHandledByAutocomplete = handleEventWithAutocomplete(autocompleteRef, event);\n    if (isHandledByAutocomplete) {\n        return event;\n    }\n\n    // taking the client from context gives us an client | undefined type, narrow it down\n    if (mxClient === undefined) {\n        return null;\n    }\n\n    switch (action) {\n        case KeyBindingAction.SendMessage:\n            send();\n            return null;\n        case KeyBindingAction.EditPrevMessage: {\n            // Or if the caret is not at the beginning of the editor\n            // Or the editor is modified\n            if (!isCaretAtStart(editor) || isEditorModified) {\n                break;\n            }\n\n            const isDispatched = dispatchEditEvent(\n                event,\n                false,\n                editorStateTransfer,\n                composerContext,\n                roomContext,\n                mxClient,\n            );\n\n            if (isDispatched) {\n                return null;\n            }\n\n            break;\n        }\n        case KeyBindingAction.EditNextMessage: {\n            // If not in edition\n            // Or if the caret is not at the end of the editor\n            // Or the editor is modified\n            if (!editorStateTransfer || !isCaretAtEnd(editor) || isEditorModified) {\n                break;\n            }\n\n            const isDispatched = dispatchEditEvent(\n                event,\n                true,\n                editorStateTransfer,\n                composerContext,\n                roomContext,\n                mxClient,\n            );\n            if (!isDispatched) {\n                endEditing(roomContext);\n                event.preventDefault();\n                event.stopPropagation();\n            }\n\n            return null;\n        }\n    }\n\n    return event;\n}\n\nfunction dispatchEditEvent(\n    event: KeyboardEvent,\n    isForward: boolean,\n    editorStateTransfer: EditorStateTransfer | undefined,\n    composerContext: ComposerContextState,\n    roomContext: IRoomState,\n    mxClient: MatrixClient,\n): boolean {\n    const foundEvents = editorStateTransfer\n        ? getEventsFromEditorStateTransfer(editorStateTransfer, roomContext, mxClient)\n        : getEventsFromRoom(composerContext, roomContext);\n    if (!foundEvents) {\n        return false;\n    }\n\n    const newEvent = findEditableEvent({\n        events: foundEvents,\n        isForward,\n        fromEventId: editorStateTransfer?.getEvent().getId(),\n        matrixClient: mxClient,\n    });\n    if (newEvent) {\n        dis.dispatch({\n            action: Action.EditEvent,\n            event: newEvent,\n            timelineRenderingType: roomContext.timelineRenderingType,\n        });\n        event.stopPropagation();\n        event.preventDefault();\n        return true;\n    }\n    return false;\n}\n\ntype InputEvent = Exclude<WysiwygEvent, KeyboardEvent | ClipboardEvent>;\n\nfunction handleInputEvent(event: InputEvent, send: Send, isCtrlEnterToSend: boolean): InputEvent | null {\n    switch (event.inputType) {\n        case \"insertParagraph\":\n            if (!isCtrlEnterToSend) {\n                send();\n                return null;\n            }\n            break;\n        case \"sendMessage\":\n            if (isCtrlEnterToSend) {\n                send();\n                return null;\n            }\n            break;\n    }\n\n    return event;\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2023 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { MatrixClient, MatrixEvent, THREAD_RELATION_TYPE } from \"matrix-js-sdk/src/matrix\";\n\nimport EditorStateTransfer from \"../../../../../utils/EditorStateTransfer\";\nimport { IRoomState } from \"../../../../structures/RoomView\";\nimport { ComposerContextState } from \"../ComposerContext\";\n\n// From EditMessageComposer private get events(): MatrixEvent[]\nexport function getEventsFromEditorStateTransfer(\n    editorStateTransfer: EditorStateTransfer,\n    roomContext: IRoomState,\n    mxClient: MatrixClient,\n): MatrixEvent[] | undefined {\n    const liveTimelineEvents = roomContext.liveTimeline?.getEvents();\n    if (!liveTimelineEvents) {\n        return;\n    }\n\n    const roomId = editorStateTransfer.getEvent().getRoomId();\n    if (!roomId) {\n        return;\n    }\n\n    const room = mxClient.getRoom(roomId);\n    if (!room) {\n        return;\n    }\n\n    const pendingEvents = room.getPendingEvents();\n    const isInThread = Boolean(editorStateTransfer.getEvent().getThread());\n    return liveTimelineEvents.concat(isInThread ? [] : pendingEvents);\n}\n\n// From SendMessageComposer private onKeyDown = (event: KeyboardEvent): void\nexport function getEventsFromRoom(\n    composerContext: ComposerContextState,\n    roomContext: IRoomState,\n): MatrixEvent[] | undefined {\n    const isReplyingToThread = composerContext.eventRelation?.key === THREAD_RELATION_TYPE.name;\n    return roomContext.liveTimeline\n        ?.getEvents()\n        .concat(isReplyingToThread ? [] : roomContext.room?.getPendingEvents() || []);\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React, { memo, MutableRefObject, ReactNode, useEffect, useMemo, useRef } from \"react\";\nimport { IEventRelation } from \"matrix-js-sdk/src/matrix\";\nimport { EMOTICON_TO_EMOJI } from \"@matrix-org/emojibase-bindings\";\nimport { useWysiwyg, FormattingFunctions } from \"@vector-im/matrix-wysiwyg\";\nimport classNames from \"classnames\";\n\nimport Autocomplete from \"../../Autocomplete\";\nimport { WysiwygAutocomplete } from \"./WysiwygAutocomplete\";\nimport { FormattingButtons } from \"./FormattingButtons\";\nimport { Editor } from \"./Editor\";\nimport { useInputEventProcessor } from \"../hooks/useInputEventProcessor\";\nimport { useSetCursorPosition } from \"../hooks/useSetCursorPosition\";\nimport { useIsFocused } from \"../hooks/useIsFocused\";\nimport { useRoomContext } from \"../../../../../contexts/RoomContext\";\nimport defaultDispatcher from \"../../../../../dispatcher/dispatcher\";\nimport { Action } from \"../../../../../dispatcher/actions\";\nimport { parsePermalink } from \"../../../../../utils/permalinks/Permalinks\";\nimport { isNotNull } from \"../../../../../Typeguards\";\nimport { useSettingValue } from \"../../../../../hooks/useSettings\";\n\ninterface WysiwygComposerProps {\n    disabled?: boolean;\n    onChange: (content: string) => void;\n    onSend: () => void;\n    placeholder?: string;\n    initialContent?: string;\n    className?: string;\n    leftComponent?: ReactNode;\n    rightComponent?: ReactNode;\n    children?: (ref: MutableRefObject<HTMLDivElement | null>, wysiwyg: FormattingFunctions) => ReactNode;\n    eventRelation?: IEventRelation;\n}\n\nfunction getEmojiSuggestions(enabled: boolean): Map<string, string> {\n    const emojiSuggestions = new Map(Array.from(EMOTICON_TO_EMOJI, ([key, value]) => [key, value.unicode]));\n    return enabled ? emojiSuggestions : new Map();\n}\n\nexport const WysiwygComposer = memo(function WysiwygComposer({\n    disabled = false,\n    onChange,\n    onSend,\n    placeholder,\n    initialContent,\n    className,\n    leftComponent,\n    rightComponent,\n    children,\n    eventRelation,\n}: WysiwygComposerProps) {\n    const { room } = useRoomContext();\n    const autocompleteRef = useRef<Autocomplete | null>(null);\n\n    const inputEventProcessor = useInputEventProcessor(onSend, autocompleteRef, initialContent, eventRelation);\n\n    const isAutoReplaceEmojiEnabled = useSettingValue<boolean>(\"MessageComposerInput.autoReplaceEmoji\");\n    const emojiSuggestions = useMemo(() => getEmojiSuggestions(isAutoReplaceEmojiEnabled), [isAutoReplaceEmojiEnabled]);\n\n    const { ref, isWysiwygReady, content, actionStates, wysiwyg, suggestion, messageContent } = useWysiwyg({\n        initialContent,\n        inputEventProcessor,\n        emojiSuggestions,\n    });\n\n    const { isFocused, onFocus } = useIsFocused();\n\n    const isReady = isWysiwygReady && !disabled;\n    const computedPlaceholder = (!content && placeholder) || undefined;\n\n    useSetCursorPosition(!isReady, ref);\n\n    useEffect(() => {\n        if (!disabled && isNotNull(messageContent)) {\n            onChange(messageContent);\n        }\n    }, [onChange, messageContent, disabled]);\n\n    useEffect(() => {\n        function handleClick(e: Event): void {\n            e.preventDefault();\n            if (\n                e.target &&\n                e.target instanceof HTMLAnchorElement &&\n                e.target.getAttribute(\"data-mention-type\") === \"user\"\n            ) {\n                const parsedLink = parsePermalink(e.target.href);\n                if (room && parsedLink?.userId)\n                    defaultDispatcher.dispatch({\n                        action: Action.ViewUser,\n                        member: room.getMember(parsedLink.userId),\n                    });\n            }\n        }\n\n        const mentions: NodeList | undefined = ref.current?.querySelectorAll(\"a[data-mention-type]\");\n        if (mentions) {\n            mentions.forEach((mention) => mention.addEventListener(\"click\", handleClick));\n        }\n\n        return () => {\n            if (mentions) mentions.forEach((mention) => mention.removeEventListener(\"click\", handleClick));\n        };\n    }, [ref, room, content]);\n\n    return (\n        <div\n            data-testid=\"WysiwygComposer\"\n            className={classNames(className, { [`${className}-focused`]: isFocused })}\n            onFocus={onFocus}\n            onBlur={onFocus}\n        >\n            <WysiwygAutocomplete\n                ref={autocompleteRef}\n                suggestion={suggestion}\n                handleMention={wysiwyg.mention}\n                handleAtRoomMention={wysiwyg.mentionAtRoom}\n                handleCommand={wysiwyg.command}\n            />\n            <FormattingButtons composer={wysiwyg} actionStates={actionStates} />\n            <Editor\n                ref={ref}\n                disabled={!isReady}\n                leftComponent={leftComponent}\n                rightComponent={rightComponent}\n                placeholder={computedPlaceholder}\n            />\n            {children?.(ref, wysiwyg)}\n        </div>\n    );\n});\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { FocusEvent, useCallback, useEffect, useRef, useState } from \"react\";\n\nexport function useIsFocused(): {\n    isFocused: boolean;\n    onFocus(event: FocusEvent<HTMLElement>): void;\n} {\n    const [isFocused, setIsFocused] = useState(false);\n    const timeoutIDRef = useRef<number>();\n\n    useEffect(() => () => clearTimeout(timeoutIDRef.current), [timeoutIDRef]);\n    const onFocus = useCallback(\n        (event: FocusEvent<HTMLElement>) => {\n            clearTimeout(timeoutIDRef.current);\n            if (event.type === \"focus\") {\n                setIsFocused(true);\n            } else {\n                // To avoid a blink when we switch mode between plain text and rich text mode\n                // We delay the unfocused action\n                timeoutIDRef.current = window.setTimeout(() => setIsFocused(false), 100);\n            }\n        },\n        [setIsFocused, timeoutIDRef],\n    );\n\n    return { isFocused, onFocus };\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { RefObject, useEffect } from \"react\";\n\nimport { setCursorPositionAtTheEnd } from \"./utils\";\n\nexport function useSetCursorPosition(disabled: boolean, ref: RefObject<HTMLElement>): void {\n    useEffect(() => {\n        if (ref.current && !disabled) {\n            setCursorPositionAtTheEnd(ref.current);\n        }\n    }, [ref, disabled]);\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { MutableRefObject, RefObject } from \"react\";\nimport { IEventRelation, MatrixClient } from \"matrix-js-sdk/src/matrix\";\nimport { WysiwygEvent } from \"@vector-im/matrix-wysiwyg\";\n\nimport { TimelineRenderingType } from \"../../../../../contexts/RoomContext\";\nimport { IRoomState } from \"../../../../structures/RoomView\";\nimport Autocomplete from \"../../Autocomplete\";\nimport { getKeyBindingsManager } from \"../../../../../KeyBindingsManager\";\nimport { KeyBindingAction } from \"../../../../../accessibility/KeyboardShortcuts\";\nimport { getBlobSafeMimeType } from \"../../../../../utils/blobs\";\nimport ContentMessages from \"../../../../../ContentMessages\";\nimport { isNotNull } from \"../../../../../Typeguards\";\n\nexport function focusComposer(\n    composerElement: MutableRefObject<HTMLElement | null>,\n    renderingType: TimelineRenderingType,\n    roomContext: IRoomState,\n    timeoutId: MutableRefObject<number | null>,\n): void {\n    if (renderingType === roomContext.timelineRenderingType) {\n        // Immediately set the focus, so if you start typing it\n        // will appear in the composer\n        composerElement.current?.focus();\n        // If we call focus immediate, the focus _is_ in the right\n        // place, but the cursor is invisible, presumably because\n        // some other event is still processing.\n        // The following line ensures that the cursor is actually\n        // visible in composer.\n        if (timeoutId.current) {\n            clearTimeout(timeoutId.current);\n        }\n        timeoutId.current = window.setTimeout(() => composerElement.current?.focus(), 200);\n    }\n}\n\nexport function setCursorPositionAtTheEnd(element: HTMLElement): void {\n    const range = document.createRange();\n    range.selectNodeContents(element);\n    range.collapse(false);\n    const selection = document.getSelection()!;\n    selection.removeAllRanges();\n    selection.addRange(range);\n\n    element.focus();\n}\n\n/**\n * When the autocomplete modal is open we need to be able to properly\n * handle events that are dispatched. This allows the user to move the selection\n * in the autocomplete and select using enter.\n *\n * @param autocompleteRef - a ref to the autocomplete of interest\n * @param event - the keyboard event that has been dispatched\n * @returns boolean - whether or not the autocomplete has handled the event\n */\nexport function handleEventWithAutocomplete(\n    autocompleteRef: RefObject<Autocomplete>,\n    // we get a React Keyboard event from plain text composer, a Keyboard Event from the rich text composer\n    event: KeyboardEvent | React.KeyboardEvent<HTMLDivElement>,\n): boolean {\n    const autocompleteIsOpen = autocompleteRef?.current && !autocompleteRef.current.state.hide;\n\n    if (!autocompleteIsOpen) {\n        return false;\n    }\n\n    let handled = false;\n    const autocompleteAction = getKeyBindingsManager().getAutocompleteAction(event);\n    const component = autocompleteRef.current;\n\n    if (component && component.countCompletions() > 0) {\n        switch (autocompleteAction) {\n            case KeyBindingAction.ForceCompleteAutocomplete:\n            case KeyBindingAction.CompleteAutocomplete:\n                autocompleteRef.current.onConfirmCompletion();\n                handled = true;\n                break;\n            case KeyBindingAction.PrevSelectionInAutocomplete:\n                autocompleteRef.current.moveSelection(-1);\n                handled = true;\n                break;\n            case KeyBindingAction.NextSelectionInAutocomplete:\n                autocompleteRef.current.moveSelection(1);\n                handled = true;\n                break;\n            case KeyBindingAction.CancelAutocomplete:\n                autocompleteRef.current.onEscape(event as {} as React.KeyboardEvent);\n                handled = true;\n                break;\n            default:\n                break; // don't return anything, allow event to pass through\n        }\n    }\n\n    if (handled) {\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    return handled;\n}\n\n/**\n * Takes an event and handles image pasting. Returns a boolean to indicate if it has handled\n * the event or not. Must accept either clipboard or input events in order to prevent issue:\n * https://github.com/vector-im/element-web/issues/25327\n *\n * @param event - event to process\n * @param data - data from the event to process\n * @param roomContext - room in which the event occurs\n * @param mxClient - current matrix client\n * @param eventRelation - used to send the event to the correct place eg timeline vs thread\n * @returns - boolean to show if the event was handled or not\n */\nexport function handleClipboardEvent(\n    event: ClipboardEvent | InputEvent,\n    data: DataTransfer | null,\n    roomContext: IRoomState,\n    mxClient: MatrixClient,\n    eventRelation?: IEventRelation,\n): boolean {\n    // Logic in this function follows that of `SendMessageComposer.onPaste`\n    const { room, timelineRenderingType, replyToEvent } = roomContext;\n\n    function handleError(error: unknown): void {\n        if (error instanceof Error) {\n            console.log(error.message);\n        } else if (typeof error === \"string\") {\n            console.log(error);\n        }\n    }\n\n    if (event.type !== \"paste\" || data === null || room === undefined) {\n        return false;\n    }\n\n    // Prioritize text on the clipboard over files if RTF is present as Office on macOS puts a bitmap\n    // in the clipboard as well as the content being copied. Modern versions of Office seem to not do this anymore.\n    // We check text/rtf instead of text/plain as when copy+pasting a file from Finder or Gnome Image Viewer\n    // it puts the filename in as text/plain which we want to ignore.\n    if (data.files.length && !data.types.includes(\"text/rtf\")) {\n        ContentMessages.sharedInstance()\n            .sendContentListToRoom(Array.from(data.files), room.roomId, eventRelation, mxClient, timelineRenderingType)\n            .catch(handleError);\n        return true;\n    }\n\n    // Safari `Insert from iPhone or iPad`\n    // data.getData(\"text/html\") returns a string like: <img src=\"blob:https://...\">\n    if (data.types.includes(\"text/html\")) {\n        const imgElementStr = data.getData(\"text/html\");\n        const parser = new DOMParser();\n        const imgDoc = parser.parseFromString(imgElementStr, \"text/html\");\n\n        if (\n            imgDoc.getElementsByTagName(\"img\").length !== 1 ||\n            !imgDoc.querySelector(\"img\")?.src.startsWith(\"blob:\") ||\n            imgDoc.childNodes.length !== 1\n        ) {\n            handleError(\"Failed to handle pasted content as Safari inserted content\");\n            return false;\n        }\n        const imgSrc = imgDoc.querySelector(\"img\")!.src;\n\n        fetch(imgSrc)\n            .then((response) => {\n                response\n                    .blob()\n                    .then((imgBlob) => {\n                        const type = imgBlob.type;\n                        const safetype = getBlobSafeMimeType(type);\n                        const ext = type.split(\"/\")[1];\n                        const parts = response.url.split(\"/\");\n                        const filename = parts[parts.length - 1];\n                        const file = new File([imgBlob], filename + \".\" + ext, { type: safetype });\n                        ContentMessages.sharedInstance()\n                            .sendContentToRoom(file, room.roomId, eventRelation, mxClient, replyToEvent)\n                            .catch(handleError);\n                    })\n                    .catch(handleError);\n            })\n            .catch(handleError);\n        return true;\n    }\n\n    return false;\n}\n\n/**\n * Util to determine if an input event or clipboard event must be handled as a clipboard event.\n * Due to https://github.com/vector-im/element-web/issues/25327, certain paste events\n * must be listenened for with an onBeforeInput handler and so will be caught as input events.\n *\n * @param event - the event to test, can be a WysiwygEvent if it comes from the rich text editor, or\n * input or clipboard events if from the plain text editor\n * @returns - true if event should be handled as a clipboard event\n */\nexport function isEventToHandleAsClipboardEvent(\n    event: WysiwygEvent | InputEvent | ClipboardEvent,\n): event is InputEvent | ClipboardEvent {\n    const isInputEventForClipboard =\n        event instanceof InputEvent && event.inputType === \"insertFromPaste\" && isNotNull(event.dataTransfer);\n    const isClipboardEvent = event instanceof ClipboardEvent;\n\n    return isClipboardEvent || isInputEventForClipboard;\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { EventStatus, MatrixClient } from \"matrix-js-sdk/src/matrix\";\n\nimport { IRoomState } from \"../../../../structures/RoomView\";\nimport dis from \"../../../../../dispatcher/dispatcher\";\nimport { Action } from \"../../../../../dispatcher/actions\";\nimport EditorStateTransfer from \"../../../../../utils/EditorStateTransfer\";\n\nexport function endEditing(roomContext: IRoomState): void {\n    // todo local storage\n    // localStorage.removeItem(this.editorRoomKey);\n    // localStorage.removeItem(this.editorStateKey);\n\n    // close the event editing and focus composer\n    dis.dispatch({\n        action: Action.EditEvent,\n        event: null,\n        timelineRenderingType: roomContext.timelineRenderingType,\n    });\n    dis.dispatch({\n        action: Action.FocusSendMessageComposer,\n        context: roomContext.timelineRenderingType,\n    });\n}\n\nexport function cancelPreviousPendingEdit(mxClient: MatrixClient, editorStateTransfer: EditorStateTransfer): void {\n    const originalEvent = editorStateTransfer.getEvent();\n    const previousEdit = originalEvent.replacingEvent();\n    if (previousEdit && (previousEdit.status === EventStatus.QUEUED || previousEdit.status === EventStatus.NOT_SENT)) {\n        mxClient.cancelPendingEvent(previousEdit);\n    }\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport { SubSelection } from \"../types\";\n\nexport function setSelection(selection: SubSelection): Promise<void> {\n    if (selection.anchorNode && selection.focusNode) {\n        const range = new Range();\n\n        if (selection.isForward) {\n            range.setStart(selection.anchorNode, selection.anchorOffset);\n            range.setEnd(selection.focusNode, selection.focusOffset);\n        } else {\n            range.setStart(selection.focusNode, selection.focusOffset);\n            range.setEnd(selection.anchorNode, selection.anchorOffset);\n        }\n        document.getSelection()?.removeAllRanges();\n        document.getSelection()?.addRange(range);\n    }\n\n    // Waiting for the next loop to ensure that the selection is effective\n    return new Promise((resolve) => setTimeout(resolve, 0));\n}\n\nexport function isSelectionEmpty(): boolean {\n    const selection = document.getSelection();\n    return Boolean(selection?.isCollapsed);\n}\n\nexport function isCaretAtStart(editor: HTMLElement): boolean {\n    const selection = document.getSelection();\n\n    // No selection or the caret is not at the beginning of the selected element\n    if (!selection) {\n        return false;\n    }\n\n    // When we are pressing keyboard up in an empty main composer, the selection is on the editor with an anchorOffset at O or 1 (yes, this is strange)\n    const isOnFirstElement = selection.anchorNode === editor && selection.anchorOffset <= 1;\n    if (isOnFirstElement) {\n        return true;\n    }\n\n    // In case of nested html elements (list, code blocks), we are going through all the first child\n    let child = editor.firstChild;\n    do {\n        if (child === selection.anchorNode) {\n            return selection.anchorOffset === 0;\n        }\n    } while ((child = child?.firstChild || null));\n\n    return false;\n}\n\nexport function isCaretAtEnd(editor: HTMLElement): boolean {\n    const selection = document.getSelection();\n\n    if (!selection) {\n        return false;\n    }\n\n    // When we are cycling across all the timeline message with the keyboard\n    // The caret is on the last text element but focusNode and anchorNode refers to the editor div\n    // In this case, the focusOffset & anchorOffset match the index + 1 of the selected text\n    const isOnLastElement = selection.focusNode === editor && selection.focusOffset === editor.childNodes?.length;\n    if (isOnLastElement) {\n        return true;\n    }\n\n    // In case of nested html elements (list, code blocks), we are going through all the last child\n    // The last child of the editor is always a <br> tag, we skip it\n    let child: ChildNode | null = editor.childNodes.item(editor.childNodes.length - 2);\n    do {\n        if (child === selection.focusNode) {\n            // Checking that the cursor is at end of the selected text\n            return selection.focusOffset === child.textContent?.length;\n        }\n    } while ((child = child.lastChild));\n\n    return false;\n}\n","/*\nCopyright 2024 New Vector Ltd.\nCopyright 2022 Šimon Brandner <simon.bra.ag@gmail.com>\n\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only\nPlease see LICENSE files in the repository root for full details.\n*/\n\nimport React from \"react\";\n\nimport { ALTERNATE_KEY_NAME, KEY_ICON } from \"../../../accessibility/KeyboardShortcuts\";\nimport { KeyCombo } from \"../../../KeyBindingsManager\";\nimport { IS_MAC, Key } from \"../../../Keyboard\";\nimport { _t } from \"../../../languageHandler\";\n\ninterface IKeyboardKeyProps {\n    name: string;\n    last?: boolean;\n}\n\nexport const KeyboardKey: React.FC<IKeyboardKeyProps> = ({ name, last }) => {\n    const icon = KEY_ICON[name];\n    const alternateName = ALTERNATE_KEY_NAME[name];\n\n    return (\n        <React.Fragment>\n            <kbd> {icon || (alternateName && _t(alternateName)) || name} </kbd>\n            {!last && \"+\"}\n        </React.Fragment>\n    );\n};\n\ninterface IKeyboardShortcutProps {\n    value: KeyCombo;\n    className?: string;\n}\n\nexport const KeyboardShortcut: React.FC<IKeyboardShortcutProps> = ({ value, className = \"mx_KeyboardShortcut\" }) => {\n    if (!value) return null;\n\n    const modifiersElement: JSX.Element[] = [];\n    if (value.ctrlOrCmdKey) {\n        modifiersElement.push(<KeyboardKey key=\"ctrlOrCmdKey\" name={IS_MAC ? Key.META : Key.CONTROL} />);\n    } else if (value.ctrlKey) {\n        modifiersElement.push(<KeyboardKey key=\"ctrlKey\" name={Key.CONTROL} />);\n    } else if (value.metaKey) {\n        modifiersElement.push(<KeyboardKey key=\"metaKey\" name={Key.META} />);\n    }\n    if (value.altKey) {\n        modifiersElement.push(<KeyboardKey key=\"altKey\" name={Key.ALT} />);\n    }\n    if (value.shiftKey) {\n        modifiersElement.push(<KeyboardKey key=\"shiftKey\" name={Key.SHIFT} />);\n    }\n\n    return (\n        <div className={className}>\n            {modifiersElement}\n            <KeyboardKey name={value.key} last />\n        </div>\n    );\n};\n"],"names":["getDefaultContextValue","defaultValue","_objectSpread","selection","anchorNode","anchorOffset","focusNode","focusOffset","isForward","ComposerContext","createContext","useComposerContext","useContext","displayName","setSelectionContext","composerContext","document","getSelection","range","getRangeAt","startContainer","startOffset","Editor","memo","forwardRef","disabled","placeholder","leftComponent","rightComponent","ref","isExpanded","breakingPoint","setIsExpanded","useState","useEffect","current","editor","resizeObserver","ResizeObserver","entries","requestAnimationFrame","_entries$","height","contentBoxSize","blockSize","observe","unobserve","useIsExpanded","onFocus","onBlur","onInput","isFocused","focusProps","useFocus","onSelectionChange","addEventListener","removeEventListener","useCallback","useSelection","React","className","classNames","mx_WysiwygComposer_Editor_content_placeholder","Boolean","style","contentEditable","role","dir","getRoomFromCompletion","completion","client","_roomToReturn","roomId","completionId","aliasFromCompletion","roomToReturn","getRoom","startsWith","getRooms","find","r","getCanonicalAlias","getAltAliases","includes","getCSSProperties","url","initialLetter","id","cssProperties","textColor","Avatar","push","join","getMentionAttributes","room","defaultLetterContent","attributes","Map","type","mentionedMember","getMember","name","userId","defaultAvatarUrl","avatarUrl","_Avatar$getInitialLet","set","_mentionedRoom$roomId2","mentionedRoom","_Avatar$getInitialLet2","_mentionedRoom$roomId","_Avatar$getInitialLet3","WysiwygAutocomplete","suggestion","handleMention","handleCommand","handleAtRoomMention","useRoomContext","useMatrixClientContext","autoCompleteQuery","keyChar","text","buildQuery","logger","log","Autocomplete","query","onConfirm","undefined","trim","href","_getRoomFromCompletio","getMentionDisplayText","start","end","BoldIcon","props","xmlns","width","fill","viewBox","children","d","ListBulletedIcon","CodeIcon","IndentDecreaseIcon","IndentIncreaseIcon","InlineCodeIcon","ItalicIcon","ListNumberedIcon","QuoteIcon","StrikethroughIcon","UnderlineIcon","isEmpty","length","LinkModal","composer","isTextEnabled","onFinished","isEditing","hasLinkChanged","setHasLinkChanged","fields","setFields","link","getLink","hasText","isSaveDisabled","BaseDialog","title","_t","hasCancel","onSubmit","async","evt","preventDefault","stopPropagation","Promise","resolve","setTimeout","setSelection","Field","required","autoFocus","label","value","onChange","e","target","onClick","removeLinks","DialogButtons","primaryButton","primaryDisabled","primaryIsSubmit","onCancel","Button","keyCombo","actionState","icon","AccessibleButton","element","mx_FormattingButtons_active","mx_FormattingButtons_Button_hover","mx_FormattingButtons_disabled","caption","KeyboardShortcut","placement","FormattingButtons","actionStates","isInList","unorderedList","orderedList","bold","ctrlOrCmdKey","key","italic","underline","strikeThrough","StrikeThroughIcon","BulletedListIcon","NumberedListIcon","indent","IndentIcon","unindent","UnIndentIcon","quote","inlineCode","codeBlock","CodeBlockIcon","Modal","createDialog","isSelectionEmpty","openLinkModal","LinkIcon","useInputEventProcessor","onSend","autocompleteRef","initialContent","eventRelation","roomContext","mxClient","isCtrlEnterToSend","useSettingValue","event","send","_event$stopPropagatio","_event$preventDefault","call","state","hide","isEventToHandleAsClipboardEvent","data","ClipboardEvent","clipboardData","dataTransfer","handleClipboardEvent","KeyboardEvent","editorStateTransfer","isEditorModified","content","action","getKeyBindingsManager","getMessageComposerAction","isHandledByAutocomplete","handleEventWithAutocomplete","KeyBindingAction","SendMessage","EditPrevMessage","isCaretAtStart","dispatchEditEvent","EditNextMessage","isCaretAtEnd","endEditing","handleKeyboardEvent","inputType","handleInputEvent","foundEvents","_roomContext$liveTime","liveTimelineEvents","liveTimeline","getEvents","getEvent","getRoomId","pendingEvents","getPendingEvents","isInThread","getThread","concat","getEventsFromEditorStateTransfer","_composerContext$even","_roomContext$liveTime2","_roomContext$room","isReplyingToThread","THREAD_RELATION_TYPE","getEventsFromRoom","newEvent","findEditableEvent","events","fromEventId","getId","matrixClient","dis","dispatch","Action","EditEvent","timelineRenderingType","WysiwygComposer","useRef","inputEventProcessor","isAutoReplaceEmojiEnabled","emojiSuggestions","useMemo","enabled","Array","from","EMOTICON_TO_EMOJI","unicode","getEmojiSuggestions","isWysiwygReady","wysiwyg","messageContent","useWysiwyg","useIsFocused","isReady","computedPlaceholder","useSetCursorPosition","isNotNull","_ref$current","handleClick","HTMLAnchorElement","getAttribute","parsedLink","parsePermalink","defaultDispatcher","ViewUser","member","mentions","querySelectorAll","forEach","mention","mentionAtRoom","command","setIsFocused","timeoutIDRef","clearTimeout","window","setCursorPositionAtTheEnd","focusComposer","composerElement","renderingType","timeoutId","_composerElement$curr","focus","_composerElement$curr2","createRange","selectNodeContents","collapse","removeAllRanges","addRange","handled","autocompleteAction","getAutocompleteAction","component","countCompletions","ForceCompleteAutocomplete","CompleteAutocomplete","onConfirmCompletion","PrevSelectionInAutocomplete","moveSelection","NextSelectionInAutocomplete","CancelAutocomplete","onEscape","replyToEvent","handleError","error","Error","console","message","files","types","ContentMessages","sharedInstance","sendContentListToRoom","catch","_imgDoc$querySelector","imgElementStr","getData","imgDoc","DOMParser","parseFromString","getElementsByTagName","querySelector","src","childNodes","imgSrc","fetch","then","response","blob","imgBlob","safetype","getBlobSafeMimeType","ext","split","parts","filename","file","File","sendContentToRoom","isInputEventForClipboard","InputEvent","FocusSendMessageComposer","context","cancelPreviousPendingEdit","previousEdit","replacingEvent","status","EventStatus","QUEUED","NOT_SENT","cancelPendingEvent","_document$getSelectio","_document$getSelectio2","Range","setStart","setEnd","isCollapsed","child","firstChild","_child","_editor$childNodes","item","_child$textContent","textContent","lastChild","KeyboardKey","last","KEY_ICON","alternateName","ALTERNATE_KEY_NAME","modifiersElement","IS_MAC","Key","META","CONTROL","ctrlKey","metaKey","altKey","ALT","shiftKey","SHIFT"],"sourceRoot":""}